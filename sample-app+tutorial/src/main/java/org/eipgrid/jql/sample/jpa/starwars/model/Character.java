package org.eipgrid.jql.sample.jpa.starwars.model;

import lombok.Getter;
import lombok.Setter;
import java.util.List;
import javax.persistence.*;
import com.fasterxml.jackson.databind.node.ObjectNode;

/** This is generated by JQL-JDBC */

@Entity
@Table(name = "character", schema = "starwars_jpa",
        uniqueConstraints = {
                @UniqueConstraint(name ="character_pkey", columnNames = {"id"})
        }
)
@org.hibernate.annotations.TypeDef(name = "jsonb", typeClass = com.vladmihalcea.hibernate.type.json.JsonBinaryType.class)
public class Character implements java.io.Serializable {
    @Getter
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false)
    Integer id;

    @Getter @Setter
    @Column(name = "species", nullable = false)
    String species;

    @Getter @Setter
    @Column(name = "name", nullable = false)
    String name;

    @Getter @Setter
    @Column(name = "height")
    Float height;

    @Getter @Setter
    @Column(name = "mass")
    Float mass;

    @Getter @Setter
    @Column(name = "metadata")
    ObjectNode metadata_;

    @Getter @Setter
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "pilot_")
    List<Starship> starship_;

    @Getter @Setter
    @OneToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "character_episode_link", schema = "starwars_jpa",
            joinColumns = @JoinColumn(name="character_id"), inverseJoinColumns = @JoinColumn(name="episode_id"))
    List<Episode> episode_;

    @Getter @Setter
    @OneToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "character_friend_link", schema = "starwars_jpa",
            joinColumns = @JoinColumn(name="character_id"), inverseJoinColumns = @JoinColumn(name="friend_id"))
    List<Character> friend_;

}
